RESULT

# MACROS

Macros recognized by the BAL assembler

## WTO

Write to Operator

```
         WTO  'text',ROUTCDE=nn|(nn,nnâ€¦)
				 
```

WTO writes a message to the operator console, the hardcopy log, or the job log depending on the ROUTCDE value. ROUTCDE=11 writes to the job log, which for almost all purposes is sufficient.

## DCB

Data Control Block

```
         DCB  DDNAME=ddname,                                           x
              MACRF=[P|G][M|L],                                        x
              DSORG=PS,                                                x
              RECFM=recfm,                                             x
              LRECL=lrecl,                                             x
              BLKSIZE=blksize,                                         x
              EODAD=eodad        

```


Generate `DCB`` (data control block) for a sequential dataset (QSAM). 

The parameters are:

* `DDNAME`

This specifies the DD name that the JCL for the data set will use.

* `MACRF`

This specifies the macro(s) to be used with this DCB (`G` for Get, `P` for Put), and the I/O mode (`M` for move, `L` for Locate). One from each pair must be specified, e.g., GL, PM.

* `DSORG`

This specifies the data set organization of the data set. For BAL Assembly, this is always `PS` (physical sequential).

* `RECFM`

This specifies the record format of the data set.

* `LRECL`

This specifies the logical record length for the data set.

* `BLKSIZE`
 
 This specifies the block size for the data set.
 
* `EODAD`

This specifies what address to branch to when EOF is reached.

## OPEN


```
         OPEN (dcb,([INPUT|OUTPUT]))
```

Open DCB at address `dcb` for input or output, as specified. The unspecified parameters in the associated DCB macro are filled first from the JCL and then from the data set attributes on disk.


## CLOSE

```
         CLOSE (dcb)
```

Close open DCB at address `dcb`

## GET

```
         GET  dcb[,area]
```

Read an input record from the open DCB at address `dcb`. In move mode, copy the record to address area. In locate mode, return the address of the record read in register 1.

## PUT

```
         PUT  dcb[,area]

```

Write a record into the open DCB at address dcb. In move mode, write an output record from address area. In locate mode, return in register 1 address where the next output record should be written. Populate the area pointed to by R1 after the PUT macro is executed.



PROMPT

Provide a detailed explanation of macros available in BAL.